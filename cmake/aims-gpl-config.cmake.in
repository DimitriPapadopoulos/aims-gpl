# Defines the following variables:
#   @PROJECT_NAME@_VERSION_MAJOR
#   @PROJECT_NAME@_VERSION_MINOR
#   @PROJECT_NAME@_VERSION_PATCH
#   @PROJECT_NAME@_VERSION
#   @PROJECT_NAME_UPPER@_BINARY_DIR
#   @PROJECT_NAME_UPPER@_DEFINITIONS
#   @PROJECT_NAME_UPPER@_INCLUDE_DIRS
#   @PROJECT_NAME_UPPER@_LIBRARIES
#   @PROJECT_NAME_UPPER@_FOUND

set( @PROJECT_NAME@_VERSION_MAJOR @BRAINVISA_PACKAGE_VERSION_MAJOR@ )
set( @PROJECT_NAME@_VERSION_MINOR @BRAINVISA_PACKAGE_VERSION_MINOR@ )
set( @PROJECT_NAME@_VERSION_PATCH @BRAINVISA_PACKAGE_VERSION_PATCH@ )
set( @PROJECT_NAME@_VERSION @BRAINVISA_PACKAGE_VERSION@ )

BRAINVISA_FIND_PACKAGE( aims REQUIRED )

get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )

set( @PROJECT_NAME_UPPER@_DEFINITIONS @AIMS-GPL_DEFINITIONS@ )
set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS
     "${AIMS-GPL_BINARY_DIR}/include"
     ${AIMS_INCLUDE_DIRS} )

if( @PROJECT_NAME@_IS_COMPILED )
  set( @PROJECT_NAME_UPPER@_LIB aimsgui )
else( @PROJECT_NAME@_IS_COMPILED )
  find_library( @PROJECT_NAME_UPPER@_LIB aimsgui "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
endif( @PROJECT_NAME@_IS_COMPILED )
set( @PROJECT_NAME_UPPER@_LIBRARIES ${AIMS_LIBRARIES} "${@PROJECT_NAME_UPPER@_LIB}" )

if( @PROJECT_NAME_UPPER@_LIB )
  set( @PROJECT_NAME_UPPER@_FOUND true )
else( @PROJECT_NAME_UPPER@_LIB )
  set( @PROJECT_NAME_UPPER@_FOUND false )
endif( @PROJECT_NAME_UPPER@_LIB )
